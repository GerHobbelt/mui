<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                        >

    <ControlTemplate x:Key="ErrorTemplatePopup">
        <StackPanel Orientation="Horizontal">
            <!-- Defines TextBox outline border and the ToolTipCorner -->
            <Border BorderThickness="1" BorderBrush="{DynamicResource ErrorBorder}" VerticalAlignment="Top">
                <Grid>
                    <Polygon x:Name="toolTipCorner"
                             HorizontalAlignment="Right"
                             IsHitTestVisible="False"/>
                    <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                </Grid>
            </Border>
            <!-- Defines the Popup -->
            <Popup x:Name="placard"
                   AllowsTransparency="True"
                   PopupAnimation="None"
                   Placement="Right"
                   PlacementTarget="{Binding ElementName=toolTipCorner}"
                   PlacementRectangle="10,0,0,0">
                <!-- Used to reposition Popup when dialog moves or resizes -->

                <Popup.Style>
                    <Style TargetType="{x:Type Popup}">
                        <Style.Triggers>
                            <!-- Shows Popup when TextBox has focus -->
                            <DataTrigger Binding="{Binding ElementName=adorner, Path=AdornedElement.IsFocused}"
                                         Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Shows Popup when mouse hovers over ToolTipCorner -->
                            <DataTrigger Binding="{Binding ElementName=toolTipCorner, Path=IsMouseOver}"
                                         Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Hides Popup when window is no longer active -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
                                         Value="False">
                                <Setter Property="IsOpen" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Popup.Style>
                <Border x:Name="errorBorder"
                        Background="{DynamicResource ErrorBorder}"
                        Margin="0,0,8,8"
                        Opacity="1"
                        IsHitTestVisible="False"
                        >
                    <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                               Foreground="{DynamicResource ErrorForeground}"
                               Margin="8,2,8,3"
                               TextWrapping="Wrap"/>
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>

</ResourceDictionary>